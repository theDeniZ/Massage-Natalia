apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Chart.Name }}-http
  namespace: {{ .Release.Namespace }}
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.entrypoints: web
    traefik.ingress.kubernetes.io/router.middlewares: {{ .Release.Namespace }}-redirect@kubernetescrd
spec:
  rules:
    - host: thedeniz.ddns.net
      http:
        paths:
          - path: /Massage-Natalia
            pathType: Prefix
            backend:
              service:
                name: {{ .Chart.Name }}
                port:
                  number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Chart.Name }}-https
  namespace: {{ .Release.Namespace }}
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
spec:
  rules:
    - host: thedeniz.ddns.net
      http:
        paths:
          - path: /Massage-Natalia
            pathType: Prefix
            backend:
              service:
                name: {{ .Chart.Name }}
                port:
                  number: 8080
  tls:
    - secretName: traefik-cert-secret-new
---
apiVersion: v1
kind: Secret
metadata:
  name: traefik-cert-secret-new
  namespace: {{ .Release.Namespace }}
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlIQlRDQ0JPMmdBd0lCQWdJUUNlMTlsT0dWVHlnQjJqTlVsWVVROVRBTkJna3Foa2lHOXcwQkFRc0ZBREJ4DQpNUXN3Q1FZRFZRUUdFd0pWVXpFck1Da0dBMVVFQ2hNaVZtbDBZV3gzWlhKcmN5QkpiblJsY201bGRDQlRiMngxDQpkR2x2Ym5Nc0lFeE1RekUxTURNR0ExVUVBeE1zVm1sMFlXeDNaWEpyY3lCSmJuUmxjbTVsZENCVGIyeDFkR2x2DQpibk1zSUU1dkxVbFFJRlJNVXlCSlEwRXdIaGNOTWpRd05EQTNNREF3TURBd1doY05NalV3TkRBMk1qTTFPVFU1DQpXakFjTVJvd0dBWURWUVFERXhGMGFHVmtaVzVwZWk1a1pHNXpMbTVsZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCDQpCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMUlgxcGpTSE40bmMvdkovOENHSm1EZ3VZeXJ1a2NZRGxUMGhEeHJUcmJoDQpZYkVIa2hPd1Q0d2luYnoydVRvcjUyRDF1cFF6SHQvTkpTam9BcW9FL0UvWkx4OXhIcGlEZ0VXNVZOL1ZLMkdrDQpKanV1Qk9UTjh0MnorOXAvSzFXSUJ1RU9aVFJZcGYxdnRCNkJmYnRzakRqanRxempTdzBsQTBJckFwTHUvSkRXDQpKaE9pN3EvbWw2WGdXNzRRaCtBQktmbjRBNlBJRWZTZFlLSWQ4LzJVVTN4cUc5eUFnMWk4NmhYdUVYL1doZFNyDQpYVCtWc2pYMUl2ZkFlZ0E5bVp0YVh6aFlBeGFqU3lNVDEvaWphUCtyWHJrMkluQUhJbXFzc0pCL1c3R3RhSDdLDQpsMmZGbWN6MWZpVmNQNkl3Q0kzN3dRNHNRdUcxWlB4bU96NHlKMDJ1cTVFQ0F3RUFBYU9DQXV3d2dnTG9NQjhHDQpBMVVkSXdRWU1CYUFGQkhxUGRzb1YyUGN3azR1ZG1zWTdDLzdxaXljTUIwR0ExVWREZ1FXQkJSeEV2NzE2cXN3DQpEUGhyOEJPVlJLUjJJd2dkV2pBY0JnTlZIUkVFRlRBVGdoRjBhR1ZrWlc1cGVpNWtaRzV6TG01bGREQStCZ05WDQpIU0FFTnpBMU1ETUdCbWVCREFFQ0FUQXBNQ2NHQ0NzR0FRVUZCd0lCRmh0b2RIUndPaTh2ZDNkM0xtUnBaMmxqDQpaWEowTG1OdmJTOURVRk13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CDQpCZ2dyQmdFRkJRY0RBakNCaUFZSUt3WUJCUVVIQVFFRWZEQjZNQ1FHQ0NzR0FRVUZCekFCaGhob2RIUndPaTh2DQpiMk56Y0M1a2FXZHBZMlZ5ZEM1amIyMHdVZ1lJS3dZQkJRVUhNQUtHUm1oMGRIQTZMeTlqWVdObGNuUnpMbVJwDQpaMmxqWlhKMExtTnZiUzlXYVhSaGJIZGxjbXR6U1c1MFpYSnVaWFJUYjJ4MWRHbHZibk5PYnkxSlVGUk1VMGxEDQpRUzVqY25Rd0RBWURWUjBUQVFIL0JBSXdBRENDQVg0R0Npc0dBUVFCMW5rQ0JBSUVnZ0Z1QklJQmFnRm9BSFlBDQpUbldqSjF5YUVNTTRXMnpVM3o5UzZ4M3c0STRialduQXNmcGtzV0thT2Q4QUFBR090M2I1WGdBQUJBTUFSekJGDQpBaUVBdEFBY2xZQXMrOGsxZ2xkYkZLWGVKVElpS1BQdGFnbXhCeGdSc1lmNHIwc0NJRmlWTnJzZVdxOE1HdFVYDQpjMWJOL1JHemdMV0FoY205dzFSeHp4UFNrZ3p6QUhVQWZWa2VFdUY0S25zY1lXZDhYdjM0MElkY0ZLQk9sWjY1DQpBeS9aRG93dWViZ0FBQUdPdDNiNVhnQUFCQU1BUmpCRUFpQTFoRDFUN0xKTnQ0WEd3RzhxU3N5VkhMNnl2WDVFDQpDbjVJclpPbmhaWmdEd0lnRnBrUHljTWRBdEVoOWErM0FXT09iU3FyK3cybkFXRnoveXVIQURhSXVJSUFkd0RtDQowakZqUUhlTXdSQkJCdGR4dWM3QjBrRDJsb1NHKzdxSE1oMzlIamVPVUFBQUFZNjNkdmx5QUFBRUF3QklNRVlDDQpJUUNDNkkyMTM5cFRkSDVEWDA5ZE9zeFErSFBpdG5zclZ4QTZsRzZvMzkzVWh3SWhBT0duSU82d2NVVzM5c3FiDQp2S3pmd3J0dXVwUXBVa0JXcEh5SzF4U1ZNSmV3TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElDQVFCUy83amFubnB2DQo0bWR5YXJmWVliNzU1OGlBUlBFWk9uTHh4bk5FdUZtREIyeWlIZytSVTNTbEdkelJzdmZyUENheFUrdUEzV0NmDQpIY1c3ck9QSkhSRzlDaFdBMG5LU0RyWlV1K3dqeE82bG1YTXlseEJ0VXZHdzZQSE53QlM2T2RKU3JnSllORytDDQo5dXdYRm40RHhscGZ3NHVUazN2R3ZCNURhWkJPcExudGhRelRMWlNCckZRQzROc3JwaWxWejR0bDhYUExNWmx3DQp6UFJCSzNOc3A3d3ZscldUVEdvMzBYTU1KdUZBTlYzMTNEK2dHcE5CZGRuK0FVV205dHZaL3MyRkxkT2FrczA1DQpTanlsRGFuS2ZTaGlzcW9tZHNpTjNJd3ppaDJvL2YxNzlkdk9WckhZenVnMjI0dXIzTkF6dGt3QjRWbVZpUjNVDQpMN0lOcGtvc09sa0RmN3JoeXl3K1N0bFdVZnJjU2xnMGs5RExCNEYzOWVwelV2cDRDNXlCUStwbXlRTHlRRmhUDQp2ZHZlOXE0MHRlYUpScldpazNaVDUxOTR2Y0kzZzVaWHBCRG1EalVJeWNXK1ZtcFZyRmoyR0p5Y21kUE1OcFI2DQoyTE56TzRsRU9UT1d3WjQvaVhkL1pQTEJrREU1a3hjbDRpUXRCSlh6M3pTTmNoSWduT0VwQytFSWNua2JNS3I2DQpWeUc3UFZDZ3pCZ1VZSGE0UW5QcGpyb2IrbzlKZFlMRytGa2IxbysrYXV2dDhDbzB5Vm1zK2tjZGUxUDl1UFE0DQpyYXdwazROejBGRTdrcnM2SG4wWjZzUTVyZHg0bDRvQnhGN2ttU0puU21yY2J4WEhaL1JiZ3VxYzNtY2RiOXBsDQpNSTdmampBSFlGOFZaUnFSMkFxZStvd29UZldsdnBDaWZBPT0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQ0KTUlJRjREQ0NCTWlnQXdJQkFnSVFBdHpJVWE5eFlycjUzejlWMVJPeFhqQU5CZ2txaGtpRzl3MEJBUXNGQURCaA0KTVFzd0NRWURWUVFHRXdKVlV6RVZNQk1HQTFVRUNoTU1SR2xuYVVObGNuUWdTVzVqTVJrd0Z3WURWUVFMRXhCMw0KZDNjdVpHbG5hV05sY25RdVkyOXRNU0F3SGdZRFZRUURFeGRFYVdkcFEyVnlkQ0JIYkc5aVlXd2dVbTl2ZENCSA0KTWpBZUZ3MHlNekF5TWpNd01EQXdNREJhRncwek16QXlNakl5TXpVNU5UbGFNSEV4Q3pBSkJnTlZCQVlUQWxWVA0KTVNzd0tRWURWUVFLRXlKV2FYUmhiSGRsY210eklFbHVkR1Z5Ym1WMElGTnZiSFYwYVc5dWN5d2dURXhETVRVdw0KTXdZRFZRUURFeXhXYVhSaGJIZGxjbXR6SUVsdWRHVnlibVYwSUZOdmJIVjBhVzl1Y3l3Z1RtOHRTVkFnVkV4VA0KSUVsRFFUQ0NBaUl3RFFZSktvWklodmNOQVFFQkJRQURnZ0lQQURDQ0Fnb0NnZ0lCQU1oNGtFVTMwSEQzcFhBUg0Kb0x0TFNvNTJCb2xWaEh1TUZtNmR5NjlCazZieXMvVkc0enR3b3NuNEdibjg5eVFORzFuRm1pSmRzRjBYaDMyMQ0KVWhQbWwrUG9RZjJ5ZGd4VVlLOUNGdmpUMjBWWkdjZ2o0d0drZWtoR05UaHZzNDlSWktEeGVGcG42TExFVFRHKw0KMEEwWEJLYWdxRzNSQUxIM1dXdGw1MlJwaUs4R1pUTFlqUGRLa1RVZXlIVnV3K042V1lhTkF2VlNWQkpUUDl5WQ0KMEZyWElvVjArNzhIa3UvZXpkVmhiOEdhclZ4b2p6cjQwaGp2dnBVamx6K0g4aTIwczg3djNIL3cxeE16aFd6MQ0KN3BOcU0zenFobjg1eldnOXJFakMxS0Y4WThEOGdzc04yaUFOTWdhejRVdElTNlFESkxPemg5dUdmVWdJaVpvMw0KSXF1eFI0WDNveWhiUGNaTmJ5NUhqZDJFQzFFWUZuR2JrcVNpa2V1RWs5MXZyVkQ0VDFydVpTaXFCcWV0dEFjTA0KalV5dDB4RCtkUWQzSEhMNVE5TGViWkN0VWZrcHd1bkpPNEJsQWtaYnJISmpHaW9PNkZtblIrc2piZitNM0xVcg0KODNZSjBEdlJWaHNGYzQwOFR4RUNET09DRDNISStveDdobktaYzdBWlJ6OXMxRmxiT3dSZE1jNndUY0FvdnhvSA0KTVg0RTc5djlMUmloUy9zWGJmNVFHdFBMSGRQMC9Xb1VhejZzejk4Q3FzOHBQdHgyQlladkJyUkxCVjQrU0JWTw0KdCt3b2pyNm1uZ1NjOTlLenFUVnhRWjN0akZtYTFmQ2l0dXlXYUlic3Vnc29YS0o2dHhvcE1QYW5keitCeForZw0Kb09Wd1AxdmFWZzVLU2RJaGtjb1B6Z2huaXh1bEFnTUJBQUdqZ2dHQ01JSUJmakFTQmdOVkhSTUJBZjhFQ0RBRw0KQVFIL0FnRUFNQjBHQTFVZERnUVdCQlFSNmozYktGZGozTUpPTG5ackdPd3YrNm9zbkRBZkJnTlZIU01FR0RBVw0KZ0JST0lsUWdHSlhtNDI3bUQvcjZ1Ukx0QmhlUE9UQU9CZ05WSFE4QkFmOEVCQU1DQVlZd0hRWURWUjBsQkJZdw0KRkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01IWUdDQ3NHQVFVRkJ3RUJCR293YURBa0JnZ3JCZ0VGQlFjdw0KQVlZWWFIUjBjRG92TDI5amMzQXVaR2xuYVdObGNuUXVZMjl0TUVBR0NDc0dBUVVGQnpBQ2hqUm9kSFJ3T2k4dg0KWTJGalpYSjBjeTVrYVdkcFkyVnlkQzVqYjIwdlJHbG5hVU5sY25SSGJHOWlZV3hTYjI5MFJ6SXVZM0owTUVJRw0KQTFVZEh3UTdNRGt3TjZBMW9ET0dNV2gwZEhBNkx5OWpjbXd6TG1ScFoybGpaWEowTG1OdmJTOUVhV2RwUTJWeQ0KZEVkc2IySmhiRkp2YjNSSE1pNWpjbXd3UFFZRFZSMGdCRFl3TkRBTEJnbGdoa2dCaHYxc0FnRXdCd1lGWjRFTQ0KQVFFd0NBWUdaNEVNQVFJQk1BZ0dCbWVCREFFQ0FqQUlCZ1puZ1F3QkFnTXdEUVlKS29aSWh2Y05BUUVMQlFBRA0KZ2dFQkFMbDloSFVUMkFhMUMzdjlDZnVrblQ3dzI3OTBHUzVNYkNpcHlsYVh3WUFhaWNyQ3d6cDVneHErVHltMw0KNkRmc251T3RtVjR0b3VsM3NTbGZNSld5Z3lBQU83T0x0ZUVyV05KTTg3ZGdNVnNJakZNTXB1M0hDdmw3cGx5eA0KaUR1bDFzMWZubVRiWXBiYlk4MGtXYjMxRWpTZnZqRmpLMDZ1M1RESnhKNld3bVJ4YmFzZlB3NXkremNTTi9odA0KRnJnR3RmWDFyS1BzdDh5WnBYNmpCTEh5NWVVVUdKbUczVkNHV1JEcnJpMWxXU2FqQkM2UmZmelI3dnpiMC93Qg0KUU9YaTc0QUI4WUh0WWx6bWpHR0E3SVk1TWpkdXI0Q2djVVdQbG9wcW40bGdQdnpSZFJEdkQwMWczcnZwRi9tYQ0KeVN5SGxoTy8rR0hXbGR4UVJiMFFkaHh5RjRnPQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlEampDQ0FuYWdBd0lCQWdJUUF6cng1cWNScWFDN0tHU3hIUW42NVRBTkJna3Foa2lHOXcwQkFRc0ZBREJoDQpNUXN3Q1FZRFZRUUdFd0pWVXpFVk1CTUdBMVVFQ2hNTVJHbG5hVU5sY25RZ1NXNWpNUmt3RndZRFZRUUxFeEIzDQpkM2N1WkdsbmFXTmxjblF1WTI5dE1TQXdIZ1lEVlFRREV4ZEVhV2RwUTJWeWRDQkhiRzlpWVd3Z1VtOXZkQ0JIDQpNakFlRncweE16QTRNREV4TWpBd01EQmFGdzB6T0RBeE1UVXhNakF3TURCYU1HRXhDekFKQmdOVkJBWVRBbFZUDQpNUlV3RXdZRFZRUUtFd3hFYVdkcFEyVnlkQ0JKYm1NeEdUQVhCZ05WQkFzVEVIZDNkeTVrYVdkcFkyVnlkQzVqDQpiMjB4SURBZUJnTlZCQU1URjBScFoybERaWEowSUVkc2IySmhiQ0JTYjI5MElFY3lNSUlCSWpBTkJna3Foa2lHDQo5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdXpmTk5OeDdhOG15YUpDdFNuWC9Scm9oQ2dpTjlSbFV5ZnVJDQoyL091OGpxSmtUeDY1cXNHR212UHJDM29YZ2trUkxwaW1uN1dvNmgrNEZSMUlBV3NVTGVjWXhwc01OemFIeG14DQoxeDdlL2RmZ3k1U0RONjdzSDBOTzNYc3MwcjB1cFMva3FiaXRPdFNacExZbDZadHJBR0NTWVA5UElVa1k5MmVRDQpxMkVHbkkveXV1bTA2Wkl5YTdYelYraGRHODJNSGF1VkJKVko4elV0bHVOSmJkMTM0L3RKUzdTc1ZRZXBqNVd6DQp0Q083VEcxRjhQYXBzcFV3dFAxTVZZd25TbGNVZklLZHpYT1MweFpLQmd5TVVOR1BIZ20rRjZIbUljcjlnK1VRDQp2SU9sQ3NSbktQWnpGQlE5Um5iRGh4U0pJVFJOcnc5RkRLWkpvYnE3bk1XeE00TXBoUUlEQVFBQm8wSXdRREFQDQpCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQi93UUVBd0lCaGpBZEJnTlZIUTRFRmdRVVRpSlVJQmlWDQo1dU51NWcvNitya1M3UVlYanprd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHQm5LSlJ2RGtoajZ6SGQ2bWNZDQoxWWw5UE1XTFNuL3B2dHNyRjkrd1gzTjNLaklUT1lGblFvUWo4a1ZuTmV5SXYvaVBzR0VNTktTdUlFeUV4dHY0DQpOZUYyMmQrbVFydkhSQWlHZnpaMEpGcmFiQTBVV1RXOThrbmR0aC9Kc3cxSEtqMlpMN3RjdTdYVUlPR1pYMU5HDQpGZHRvbS9Eek1OVStNZUtOaEo3aml0cmFsajQxRTZWZjhQbHdVSEJIUVJGWEdVN0FqNjRHeEpVVEZ5OGJKWjkxDQo4ckdPbWFGdkU3RkJjZjZJS3NoUEVDQlYxL01VUmVYZ1JQVHFoNVV5a3c3K1UwYjZMSjMvaXlLNVM5a0pSYVRlDQpwTGlhV04wYmZWS2ZqbGxEaUlHa25pYlZiNjNkRGNZM2ZlMERraHZsZDE5MjdqeU54RjFXVzZMWlptNnpOVGZsDQpNclk9DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQo=
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQzBWOWFZMGh6ZUozUDcKeWYvQWhpWmc0TG1NcTdwSEdBNVU5SVE4YTA2MjRXR3hCNUlUc0UrTUlwMjg5cms2SytkZzlicVVNeDdmelNVbwo2QUtxQlB4UDJTOGZjUjZZZzRCRnVWVGYxU3RocENZN3JnVGt6Zkxkcy92YWZ5dFZpQWJoRG1VMFdLWDliN1FlCmdYMjdiSXc0NDdhczQwc05KUU5DS3dLUzd2eVExaVlUb3U2djVwZWw0RnUrRUlmZ0FTbjUrQU9qeUJIMG5XQ2kKSGZQOWxGTjhhaHZjZ0lOWXZPb1Y3aEYvMW9YVXExMC9sYkkxOVNMM3dIb0FQWm1iV2w4NFdBTVdvMHNqRTlmNApvMmovcTE2NU5pSndCeUpxckxDUWYxdXhyV2greXBkbnhabk05WDRsWEQraU1BaU4rOEVPTEVMaHRXVDhaanMrCk1pZE5ycXVSQWdNQkFBRUNnZ0VCQUxKQktFSkJYSHRSTDlrdW5uYWpvb2ViV0l2c3FlRGZyRHJZdldRakJOakwKQ1k2NzF1MVRGaTJEZ2JwbmZFbzlYeVI5Zm9CQnowQ1RPeW1sdWd4bmhTVS9uTTVOTjFxMGtETmFyc1BYcGx1SwpycWZLcDllb29XZjJJUGlsUGlYNm9DSVA0b1ROSXJUUWxvNlltN2lINEVuUytwc0V4d2dsRDRWMWtjTytLVExXCmNHVHoxZ0JjZUJjQXQ4cndKYzAxUUd0YjluVFhwazJ6cmdMV3k5emFhc2kzQjUxSFhtdEZGeWFMdHBSTzh6MkUKdGpZWjlxSDk0Sm1pMGFoNmdCb1pBbDdWUjdjRkpHRTJ4UHdNb0JCREpSNktRZHBBRzd1L2lHcFN4eUh4eTdrWQpxZVp4WmdWOEJoVEVkdTQ5VTJwd1dHT1lWNjl4Tm45bHB0c2VUaXp2VE9rQ2dZRUExdVpGOXRMdEZYUlIrWlcvCkNjMDRhV3pLZXdrK3Y0RkNsMnBEV1pOWEsrRi9oWE1oSU1GcTRWUUV4bVV3SGhXaEJ0WXA4b2hqaVh1a2phTUkKV3BFVVNTTXR3VEtRZE40U3hLdXo5QmFyOXlaVC9TdVdBbUVpdHZvY3ZQT0drdGRNS2hMaWVYWG9QeHpMcnJ4TApZbGVzTjBNL1Z1VWMySlVsTEFLb1VXaVhBNWNDZ1lFQTF0V2xBamR1NFVXYThJby9oQnRLNUVKTGJVempUYndLCkJGcHVMS21laWxJVEdBVFNya2JJRGNrcDUwa1NVNzliVW5qeGlSUHlPUHpmeFBVN09DVkM0aUYvSHAxU2ZWZFcKTlN4cGpFMWZabTNPL2lvblU0b3RtZWs4dnlWZmllSkFBNGlFdEV4RFFXSzlCTkp1eFlkRmZ6dTRLbi9vZFJHTgpKa2NBbms5RWp4Y0NnWUFJMUp1SlllOTJFenFQRy9VbXJQVWxkOS8ySUZJZ3dtbi9HTkc5cTQxSWMxS3ZKQ1QzCldKdFF1UWdkTXVsQVF6bERzNmN6blNFaDlCKzE1ajRnb3BlSHpkZENlaFp2aHZTVWVrM0J1UERHRGlBalpoZ2EKN3V6alFmSE9YZDlveDBvTTdJdTcyL2w0Sm5IRU0xNlJvdktqcnJLNm1sMk9GTXJiUFJ5M2c2bTQ3d0tCZ0dNcApWZkxCOTNJUG1NYXlhVUxtL2hpQjZTTFlQSXJpNHBURDBOcllxQThjZHllOUFpbmpEZkFmRERKdmJnQXQ4VThOCitCN1hrQlJ4MUMrcktkeHVob0t1QjJqd0lPVXQ3T0s2VHpXdGVQMWtiZ2l2R0Z2ZENkTmk3dUVqdFFlRjRScEEKWjFCNWF3bkJNNUlJTjQwQk5UalhMZGlnRllJRHllMERGT3Y5bHAyZEFvR0FFZVVUNUpnc013QlRXOFBTLzVJQQppeFJFeVdITHV3WjRuNGJ0TTZlUlllUnZEYlZRTE9QdHVVSXpqN29BYXQwVUdaN2sxYmpDZ21mRFBpLzZ5TjFaCmRpODh2dkd5dTIranlsNE10U1RKVmdaWUF5V0xYcTJHTnZsWXI1NUphRzcwRWFRY1BwQjhMcHFaSmJKR0gxK2sKQlpFSTAzMGEvREtuV0lmNHlaYnJxaWs9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  namespace: {{ .Release.Namespace }}
  name: allow-all-ingress
spec:
  podSelector: {}
  ingress:
  - {}
  policyTypes:
  - Ingress
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: redirect
  namespace: {{ .Release.Namespace }}
spec:
  redirectScheme:
    scheme: https
    permanent: true